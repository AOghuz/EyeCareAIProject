@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Doktor/Views/AdminLayout/Index.cshtml";
}

<h2 style="font-family: Arial; color: #2c3e50;">📷 Diyabetik Retina Sınıflandırma</h2>

<!-- Özelleştirilmiş Dosya Girişi -->
<div style="margin-bottom: 10px;">
    <label for="imageInput"
           style="background-color:#2ecc71;color:#fff;padding:8px 14px;border-radius:5px;cursor:pointer;">
        📁 Dosya Seç
    </label>
    <input type="file" id="imageInput" style="display:none;" />
    <button onclick="uploadImage()"
            style="margin-left:10px;padding:8px 12px;background-color:#3498db;color:#fff;border:none;border-radius:5px;">
        📤 Resmi Gönder
    </button>
</div>

<p id="loadingMessage" style="display:none;color:orange;">⏳ Resim yükleniyor…</p>
<p id="predictedClass" style="font-weight:bold;font-size:18px;"></p>
<p id="doctorAdvice" style="font-size:16px;color:#2c3e50;margin-top:8px;"></p>

<canvas id="pieChart" width="500" height="500" style="display:none;margin-left:350px;"></canvas>

<!-- Chart.js ve eklenti -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.2.0"></script>

<script>
    /* ---------- Sınıf → Tavsiye haritası (normalize edilmiş anahtarlar) ---------- */
    const adviceMap = {
        /* Bulgusuz / No_DR */
        "nodr": "⚖️ Bulgusuz: Yıllık fundoskopi + HbA1c takibi.",
        "0": "⚖️ Bulgusuz: Yıllık fundoskopi + HbA1c takibi.",

        /* Hafif NPDR */
        "mildnpdr": "👀 Hafif NPDR: 6-12 ayda retina kontrolü, kan şekeri & tansiyon optimizasyonu.",
        "mild": "👀 Hafif NPDR: 6-12 ayda retina kontrolü, kan şekeri & tansiyon optimizasyonu.",
        "1": "👀 Hafif NPDR: 6-12 ayda retina kontrolü, kan şekeri & tansiyon optimizasyonu.",

        /* Orta NPDR */
        "moderatenpdr": "🔍 Orta NPDR: 3-6 ayda bir OCT/FFA, olası fokal lazer için yönlendirme.",
        "moderate": "🔍 Orta NPDR: 3-6 ayda bir OCT/FFA, olası fokal lazer için yönlendirme.",
        "2": "🔍 Orta NPDR: 3-6 ayda bir OCT/FFA, olası fokal lazer için yönlendirme.",

        /* Şiddetli NPDR */
        "severenpdr": "🚨 Şiddetli NPDR: <3 ay içinde retina uzmanına sevk; panretinal lazer / anti-VEGF planlaması.",
        "severe": "🚨 Şiddetli NPDR: <3 ay içinde retina uzmanına sevk; panretinal lazer / anti-VEGF planlaması.",
        "3": "🚨 Şiddetli NPDR: <3 ay içinde retina uzmanına sevk; panretinal lazer / anti-VEGF planlaması.",

        /* Proliferatif DR */
        "proliferatepdr": "🏥 Proliferatif DR: Acil retina uzmanı görüşü, panretinal fotokoagülasyon + anti-VEGF ± vitrektomi.",
        "proliferatedr": "🏥 Proliferatif DR: Acil retina uzmanı görüşü, panretinal fotokoagülasyon + anti-VEGF ± vitrektomi.",
        "4": "🏥 Proliferatif DR: Acil retina uzmanı görüşü, panretinal fotokoagülasyon + anti-VEGF ± vitrektomi."
    };

    /* Etiketi “NO_DR” → “nodr”, “Moderate” → “moderate”, “Proliferate_DR” → “proliferatedr” vb. hâle getir */
    function normalizeLabel(label) {
        if (typeof label === "number") return String(label);
        return label
            .toString()
            .toLowerCase()
            .replace(/[^a-z0-9]/g, "");   // boşluk, alt çizgi vb. sil
    }

    let currentChart = null;

    async function uploadImage() {
        const fileInput = document.getElementById("imageInput").files[0];
        if (!fileInput) { alert("Lütfen bir resim seçin."); return; }

        const formData = new FormData();
        formData.append("file", fileInput);

        document.getElementById("loadingMessage").style.display = "block";
        document.getElementById("predictedClass").innerText = "";
        document.getElementById("doctorAdvice").innerText = "";
        document.getElementById("pieChart").style.display = "none";

        try {
            const response = await fetch(
                "https://localhost:7181/api/AIProcessing/upload",
                { method: "POST", body: formData }
            );

            document.getElementById("loadingMessage").style.display = "none";

            if (!response.ok) {
                document.getElementById("doctorAdvice").innerText =
                    `⚠️ Sunucu hatası: ${response.status}`;
                return;
            }

            /* Örn. yanıt: { "predicted_class":"Moderate", "class_percentages":{...} } */
            const data = await response.json();

            const predictedRaw = data.predicted_class;
            const predicted = normalizeLabel(predictedRaw);
            const percentages = data.class_percentages;

            /* 1) Tahmin edilen sınıf (ham hâliyle gösterelim) */
            document.getElementById("predictedClass")
                .innerText = `📌 Tahmin Edilen Sınıf: ${predictedRaw}`;

            /* 2) Doktor tavsiyesi */
            const adviceText = adviceMap[predicted] || "⚠️ Bu sınıf için tanımlı tavsiye yok.";
            document.getElementById("doctorAdvice")
                .innerText = `💡 Doktor Önerisi: ${adviceText}`;

            /* 3) Pasta grafiği */
            const labels = Object.keys(percentages);
            const values = Object.values(percentages);
            const ctx = document.getElementById("pieChart").getContext("2d");

            if (currentChart) currentChart.destroy();  // eski grafiği temizle

            currentChart = new Chart(ctx, {
                type: "pie",
                data: {
                    labels: labels,
                    datasets: [{
                        data: values,
                        backgroundColor: ["#3498db", "#e74c3c", "#2ecc71",
                            "#f1c40f", "#9b59b6"],
                        borderColor: "#fff",
                        borderWidth: 2
                    }]
                },
                options: {
                    responsive: false,
                    plugins: {
                        legend: { display: false },
                        title: {
                            display: true,
                            text: "Sınıf Dağılımı (%)",
                            font: { size: 16 },
                            color: "#34495e"
                        },
                        datalabels: {
                            color: "#fff",
                            font: { weight: "bold", size: 12 },
                            formatter: (v, ctx) =>
                                ctx.chart.data.labels[ctx.dataIndex]
                        }
                    }
                },
                plugins: [ChartDataLabels]
            });

            document.getElementById("pieChart").style.display = "block";

        } catch (err) {
            console.error(err);
            document.getElementById("doctorAdvice").innerText =
                "⚠️ İstek sırasında bir hata oluştu.";
        }
    }
</script>
